// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(uuid())
  username     String         @unique
  email        String         @unique
  password     String
  role         String         @default("user")
  xp           Int            @default(0)
  createdAt    DateTime       @default(now())
  LearningGoal LearningGoal[]
  Submission   Submission[]
}

model LearningGoal {
  id          String   @id @default(uuid())
  title       String
  description String
  status      String   @default("pending") // pending | in_progress | completed
  progress    Int      @default(0) // 0-100
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

model Challenge {
  id          String       @id @default(uuid())
  title       String
  description String
  difficulty  Difficulty
  topic       String
  solution    String // This is for MVP â€” later can be test cases/code
  createdAt   DateTime     @default(now())
  submissions Submission[]
}

model Submission {
  id          String    @id @default(uuid())
  answer      String
  isCorrect   Boolean   @default(false)
  xpEarned    Int       @default(0)
  submittedAt DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  challenge   Challenge @relation(fields: [challengeId], references: [id])
  challengeId String
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}
